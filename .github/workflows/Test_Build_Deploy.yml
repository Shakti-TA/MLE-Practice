name: UnitTest, Build and Deploy

on:
  push:
    branches:
      - testing
#   pull_request:
#     branches:
#       - testing
jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Conda (for running)
      - name: ⚙️ Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: mle-dev
          environment-file: env.yml
          use-mamba: true

      # Step 3: Install dependencies (setuptools, wheel)
      - name: 📦 Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # Step 4: Install tree CLI tool
      - name: 🌳 Install `tree`
        run: sudo apt-get install -y tree

      # Step 5: Show directory tree (before build)
      - name: 📂 Tree Before Build
        run: tree -L 3

      # Step 6: Build the package
      - name: 🏗️ Build the Package
        run: |
          python setup.py sdist bdist_wheel

      # Step 7: Show directory tree (after build)
      - name: 📂 Tree After Build
        run: tree -L 3


      # Step 8: Install the package in Dev mode
      - name: 📦 Install  Package in Dev mode
        run: |
          pip install -e .


      # Step 9: Get the input data from ingest_data
      - name: 📦 Get input data
        run: |
          python3 Script/ingest_data_script.py

      # Step-10: Downgrade the Scikit-learn version to 1.3.2
      - name: Install scikit-learn version 1.3.2
        run: |
          pip install scikit-learn==1.3.2

      # Step 11: Run the Unit tests
      - name: 📦 Run Unit_tests
        run: |
          pytest tests/unit_test.py

  Build:
    name: Build jobs
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Install dependencies (setuptools, wheel)
      - name: 📦 Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel


      # Step 3: Build the package
      - name: 🏗️ Build the Package
        run: |
          python setup.py sdist bdist_wheel

      # Step 4: Set up Conda (for running)
      - name: ⚙️ Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: mle-dev
          environment-file: env.yml
          use-mamba: true

      # Step 5: Install the package
      - name: 📦 Install Built Package
        run: |
          pip install dist/*.whl

      # Step 6: Run test_installations.py
      - name: ▶️ Run test_installations
        run: |
          PYTHONPATH=src pytest tests/test_installations.py

      # Step 7: Upload the build artifacts
      - name: ⬆️ Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/


      # Step 8: Upload env.yml as artifact
      - name: ⬆️ Upload env.yml artifact
        uses: actions/upload-artifact@v4
        with:
          name: env-file
          path: env.yml

      # Step 9: Upload scripts and code
      - name: ⬆️ Upload Scripts Artifact
        uses: actions/upload-artifact@v4
        with:
            name: code-artifacts
            path: Script/ingest_data_script.py


  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: Build

    steps:

      # Step 1: Download env.yml artifact
      - name: ⬇️ Download env.yml artifact
        uses: actions/download-artifact@v4
        with:
          name: env-file
          path: .

      # Step 2: Set up Conda (for running)
      - name: ⚙️ Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: mle-dev
          environment-file: env.yml
          use-mamba: true

      # Step 3: Download the build artifact
      - name: ⬇️ Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./artifact

      # Step 4: Download code artifacts (scripts like ingest_data_script.py)
      - name: ⬇️ Download Code Artifact
        uses: actions/download-artifact@v4
        with:
          name: code-artifacts
          path: ./Script

      # Step 5: Install the package
      - name: 📦 Install Built Package
        run: |
          pip install ./artifact/*.whl


      # Step 6: Run script -h mode
      - name: Run script in help mode
        run: |
          python3 Script/ingest_data_script.py -h

      # Step 7: Run Script default mode
      - name: Run script default
        run: |
          python3 Script/ingest_data_script.py
