name: Build and Deploy Python Package

on: [push, pull_request]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment (for building)
      - name: 🛠️ Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install dependencies (setuptools, wheel)
      - name: 📦 Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      # Step 4: Install tree CLI tool
      - name: 🌳 Install `tree`
        run: sudo apt-get install -y tree

      # Step 5: Show directory tree (before build)
      - name: 📂 Tree Before Build
        run: tree -L 3

      # Step 6: Build the package
      - name: 🏗️ Build the Package
        run: |
          python setup.py sdist bdist_wheel

      # Step 7: Show directory tree (after build)
      - name: 📂 Tree After Build
        run: tree -L 3

      # Step 8: Upload the build artifacts
      - name: ⬆️ Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/

      # Step 9: Set up Conda (for running)
      - name: 🌿 Set up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.10
          miniconda-version: "latest"
          environment-file: env.yml  # Make sure this file exists in your repo

      # Step 10: Download the build artifact
      - name: ⬇️ Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: ./artifact

      # Step 11: Install the package
      - name: 📦 Install Built Package
        run: |
          cd ./artifact
          pip install dist/*.whl

      # Step 12: Run nonstandardcode.py
      - name: ▶️ Run nonstandardcode.py
        run: |
          python -c "import nonstandardcode; nonstandardcode.main()"
